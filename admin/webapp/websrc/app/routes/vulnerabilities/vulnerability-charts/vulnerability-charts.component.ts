import { Component, Input, OnInit } from '@angular/core';
import { ChartConfiguration } from 'chart.js';
import { TranslateService } from '@ngx-translate/core';
import { VulnerabilitiesService } from '../vulnerabilities.service';

@Component({
  selector: 'app-vulnerability-charts',
  templateUrl: './vulnerability-charts.component.html',
  styleUrls: ['./vulnerability-charts.component.scss'],
})
export class VulnerabilityChartsComponent implements OnInit {
  @Input() complianceDist!: any;
  topVulnerableNodesChartData!: ChartConfiguration<'bar', number[], string>;
  topVulnerableImagesChartData!: ChartConfiguration<'bar', number[], string>;
  barChartColors = {
    high: '#ef5350',
    medium: '#ff9800',
    low: '#4caf50',
  };

  constructor(
    private translate: TranslateService,
    private vulnerabilitiesService: VulnerabilitiesService
  ) {}

  ngOnInit() {
    this.topVulnerableNodesChartData = {
      options: {
        indexAxis: 'y',
        elements: {
          bar: {
            borderWidth: 2,
          },
        },
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: true,
            position: 'top',
          },
          title: {
            display: true,
            text: this.translate.instant(
              'scan.report.others.TOP_VULNERABLE_HOSTS'
            ),
          },
        },
      },
      data: {
        labels: this.vulnerabilitiesService.topNodes.map(n => n[0]),
        datasets: [
          {
            data: this.vulnerabilitiesService.topNodes.map(n => n[1].high),
            label: this.translate.instant('enum.HIGH'),
            backgroundColor: this.barChartColors.high,
            hoverBackgroundColor: this.barChartColors.high,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
          {
            data: this.vulnerabilitiesService.topNodes.map(n => n[1].medium),
            label: this.translate.instant('enum.MEDIUM'),
            backgroundColor: this.barChartColors.medium,
            hoverBackgroundColor: this.barChartColors.medium,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
          {
            data: this.vulnerabilitiesService.topNodes.map(n => n[1].low),
            label: this.translate.instant('enum.LOW'),
            backgroundColor: this.barChartColors.low,
            hoverBackgroundColor: this.barChartColors.low,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
        ],
      },
      type: 'bar',
    };

    this.topVulnerableImagesChartData = {
      options: {
        indexAxis: 'y',
        elements: {
          bar: {
            borderWidth: 2,
          },
        },
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: true,
            position: 'top',
          },
          title: {
            display: true,
            text: this.translate.instant(
              'scan.report.others.TOP_VULNERABLE_IMAGES'
            ),
          },
        },
      },
      data: {
        labels: this.vulnerabilitiesService.topImages.map(n => n[0]),
        datasets: [
          {
            data: this.vulnerabilitiesService.topImages.map(n => n[1].high),
            label: this.translate.instant('enum.HIGH'),
            backgroundColor: this.barChartColors.high,
            hoverBackgroundColor: this.barChartColors.high,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
          {
            data: this.vulnerabilitiesService.topImages.map(n => n[1].medium),
            label: this.translate.instant('enum.MEDIUM'),
            backgroundColor: this.barChartColors.medium,
            hoverBackgroundColor: this.barChartColors.medium,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },{
            data: this.vulnerabilitiesService.topImages.map(n => n[1].low),
            label: this.translate.instant('enum.LOW'),
            backgroundColor: this.barChartColors.low,
            hoverBackgroundColor: this.barChartColors.low,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
        ],
      },
      type: 'bar',
    };
  }
}
